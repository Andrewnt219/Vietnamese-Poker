{"ast":null,"code":"var _jsxFileName = \"D:\\\\Temporary Work\\\\Project\\\\react-vietnamese-poker\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport classes from './App.module.css';\nimport Player from './Player/Player';\nimport InitGame from './InitGame/InitGame';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      /* Game stats */\n      players: [],\n      card: [1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 7, 7, 7, 7, 8, 8, 8, 8, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10],\n      playerCount: 0,\n\n      /* game controls */\n      error: '',\n      turn: 0,\n\n      /* display controls */\n      showInit: true,\n      showGame: false\n    };\n\n    this.playerNumberHandler = event => {\n      let playerCount = event.target.value,\n          error = \"\";\n\n      if (playerCount > 15) {\n        error = \"Maximum 15 players!\";\n        playerCount = 15;\n      }\n\n      const players = [];\n\n      for (let i = 0; i < playerCount; i++) {\n        players.push({\n          asset: 200,\n          id: `player-${i}`,\n          name: `player-${i}`,\n          card: [],\n          cardNumber: 0,\n          bet: 50,\n          score: 0\n        });\n      }\n\n      this.setState({\n        players: players,\n        playerCount: playerCount,\n        error: error\n      });\n    };\n\n    this.changeName = (event, index) => {\n      const players = [...this.state.players];\n      players[index].name = event.target.value;\n      this.setState({\n        players: players\n      });\n    };\n\n    this.gameStart = event => {\n      /* Start game with custom asset \n      const players = [...this.state.players];\n      event.target.value === \"Game Start!\" ? players.map(player => {player.}) */\n\n      /* Distributes 3 cards */\n      let players = [...this.state.players];\n      const card = [...this.state.card];\n\n      for (let i = 0; i < 3; i++) players = players.map(player => {\n        player.card.push(card.pop());\n        return player;\n      });\n      /* hide init */\n\n      /* display Game UI */\n\n\n      this.setState({\n        players: players,\n        card: card,\n        showInit: false,\n        showGame: true\n      });\n      this.playerComponent = [...this.state.players].map(player => React.createElement(Player, {\n        name: player.name,\n        card: player.card,\n        cardNumber: player.cardNumber,\n        bet: player.bet,\n        score: player.score,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }));\n    };\n\n    this.draw = () => {\n      const deck = this.state.card;\n      const players = [...this.state.players];\n      const activePlayer = players[this.utils.activePlayerIndex()];\n      /* don't need increasement because cardnumber = index + 1 */\n\n      activePlayer.card[activePlayer.cardNumber] = deck.pop();\n      this.setState({\n        players: players\n      });\n    };\n\n    this.utils = {\n      joinClass: (...css) => css.join(' '),\n      activePlayerIndex: () => this.state.turn % this.state.playerCount\n    };\n  }\n\n  render() {\n    /* Init UI */\n    let init = React.createElement(\"div\", {\n      className: classes.init,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Numbers of players\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"number\",\n      max: \"15\",\n      onChange: this.playerNumberHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    })), React.createElement(InitGame, {\n      changeName: this.changeName,\n      count: this.state.playerCount,\n      error: this.state.error,\n      players: [...this.state.players],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.gameStart,\n      value: \"Game Start\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Game Start!\"), React.createElement(\"button\", {\n      onClick: this.gameStart,\n      value: \"Quick Start\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Quick Start\"));\n    if (!this.state.showInit) init = null;\n    /* Gaminng UI */\n\n    let game = null;\n    if (this.state.showGame) game = React.createElement(\"div\", {\n      className: classes.gameUI,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, this.playerComponent, React.createElement(\"button\", {\n      className: classes.button,\n      onClick: this.draw,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Draw\"), React.createElement(\"button\", {\n      className: this.utils.joinClass(classes.button, classes.red),\n      onClick: this.deal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"Deal\"));\n    return React.createElement(\"div\", {\n      className: classes.App,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, init, game);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:/Temporary Work/Project/react-vietnamese-poker/src/App.js"],"names":["React","Component","classes","Player","InitGame","App","state","players","card","playerCount","error","turn","showInit","showGame","playerNumberHandler","event","target","value","i","push","asset","id","name","cardNumber","bet","score","setState","changeName","index","gameStart","map","player","pop","playerComponent","draw","deck","activePlayer","utils","activePlayerIndex","joinClass","css","join","render","init","game","gameUI","button","red","deal"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport classes from './App.module.css';\nimport Player from './Player/Player'\nimport InitGame from './InitGame/InitGame'\n\nclass App extends Component {\n  state = {\n    /* Game stats */\n    players: [],\n    card: [\n      1, 1, 1, 1,\n      2, 2, 2, 2,\n      3, 3, 3, 3,\n      4, 4, 4, 4,\n      5, 5, 5, 5,\n      6, 6, 6, 6,\n      7, 7, 7, 7,\n      8, 8, 8, 8,\n      9, 9, 9, 9,\n      10, 10, 10, 10,\n      10, 10, 10, 10,\n      10, 10, 10, 10\n    ],\n    playerCount: 0,\n    /* game controls */\n    error: '',\n    turn: 0,\n    /* display controls */\n    showInit: true,\n    showGame: false\n  }\n\n  /* Game initialization phase */\n  /* Custom number of players */\n  playerNumberHandler = (event) => {\n    let playerCount = event.target.value, error=\"\";\n    if (playerCount > 15) {\n      error = \"Maximum 15 players!\"\n      playerCount = 15;\n    }\n    const players = [];\n    for (let i = 0; i < playerCount; i++) {\n      players.push({\n        asset: 200,\n        id: `player-${i}`,\n        name: `player-${i}`,\n        card: [],\n        cardNumber: 0,\n        bet: 50,\n        score:0\n      })\n    }\n    this.setState({ players: players, playerCount: playerCount, error: error });\n  }\n  /* Modify player's name */\n  changeName = (event, index) => {\n    const players = [...this.state.players];\n    players[index].name = event.target.value;\n    this.setState({players:players})\n  }\n  gameStart = (event) => {\n    /* Start game with custom asset \n    const players = [...this.state.players];\n    event.target.value === \"Game Start!\" ? players.map(player => {player.}) */\n\n    /* Distributes 3 cards */\n    let players = [...this.state.players];\n    const card = [...this.state.card];\n    for (let i= 0; i < 3; i++) players=players.map(player => {player.card.push(card.pop()); return player});\n\n    /* hide init */\n    \n    /* display Game UI */\n    this.setState({players:players, card:card, showInit: false, showGame: true});\n    this.playerComponent = [...this.state.players].map(player => (\n      <Player name={player.name} card={player.card} cardNumber={player.cardNumber} bet={player.bet} score= {player.score}/>\n    ))\n\n  }\n\n  /* Game phase */\n  draw = () => {\n    const deck = this.state.card;\n    const players = [...this.state.players];\n    const activePlayer = players[this.utils.activePlayerIndex()];\n    /* don't need increasement because cardnumber = index + 1 */\n    activePlayer.card[activePlayer.cardNumber] = deck.pop();\n    this.setState({players:players})\n  }\n\n\n  /* Utilities */\n  utils = {\n    joinClass: (...css) => css.join(' '),\n    activePlayerIndex: () => this.state.turn % this.state.playerCount\n  }\n  render() {\n    /* Init UI */\n    let init = (\n      <div className={classes.init}>\n          <label htmlFor=\"\">Numbers of players<br /><input type=\"number\" max=\"15\" onChange={this.playerNumberHandler} /></label>\n          <InitGame changeName={this.changeName} count={this.state.playerCount} error={this.state.error} players={[...this.state.players]} />\n          <button onClick={this.gameStart} value=\"Game Start\">Game Start!</button>\n          <button onClick={this.gameStart} value=\"Quick Start\">Quick Start</button>\n        </div>\n    );\n    if (!this.state.showInit) init = null;\n\n    /* Gaminng UI */\n    let game = null;\n    if (this.state.showGame) game = (\n      <div className={classes.gameUI}>\n                {this.playerComponent}\n                <button className={classes.button} onClick={this.draw}>Draw</button>\n                <button className={this.utils.joinClass(classes.button, classes.red)} onClick={this.deal}>Deal</button>\n      </div>\n    )\n\n    return (\n      <div className={classes.App} >\n        {init}\n        {game}\n      </div>\n    );\n\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}